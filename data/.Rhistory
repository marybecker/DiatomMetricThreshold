completedColor = "#7D4479") %>%
addEasyButton(easyButton(
icon="fa-home", title="Zoom to State",
onClick=JS("function(btn, map){ map.setZoom(9); }")))
})
#Update the map and view on select input changes#
observeEvent(input$ID, {
p<- subset(sites, SID==input$ID)
if(nrow(p)==0){
leafletProxy("m") %>% removeMarker(layerId="Selected")
} else {
leafletProxy("m") %>%
setView(lng=p$XLong, lat=p$YLat,zoom=15) %>%
addCircleMarkers(p$XLong, p$YLat, radius=10, color="black",
fillOpacity=0, opacity=1, stroke=TRUE, label=paste(p$SID),
popup=paste(sep="<br/>",p$Station_Name,
paste("SID",p$STA_SEQ),sites$Proximity_Landmark),
layerId="Selected")
}
})
})
test<-read.table("C:/Users/beckerm/Desktop/stationsTEST.txt",sep="")
test<-read.table("C:/Users/beckerm/Desktop/stationsTEST.txt",sep="\t")
library(RODBC)
cn<- odbcDriverConnect("Driver=ODBC Driver 13 for SQL Server; Server= DEEPDBS120; Database=WQX;
Uid=wqx_readonly;Pwd=wqx_readonly")
sites<- sqlFetch(cn,"Stations")
odbcClose(cn)
names(sites)
sites[1:10,]
sites[380:390,]
sites[sites$STA_SEQ==14316,]
install.packages("RMySQL")
library(RMySQL)
c<-dbConnect(MySQL(),user="flow_user",password="water97$",dbname="flow_observation",host="eco.cs.hartford.edu",port=3308)
library("RCurl", lib.loc="~/R/win-library/3.4")
detach("package:RCurl", unload=TRUE)
install.packages("RCurl")
library(RCurl)
scp("eco.cs.hartford.edu","/media/data/sftp/flow_data/DBData","water97$",user="sftp")
scp("eco.cs.hartford.edu:22","/media/data/sftp/flow_data/DBData","water97$",user="sftp")
d <- read.table(pipe('ssh -l sftp eco.cs.hartford.edu "/media/data/sftp/flow_data/DBData"'))
d <- read.table(pipe('ssh -l sftp eco.cs.hartford.edu "/media/data/sftp/flow_data/DBData/sitesDB.csv"'))
d <- read.table(pipe('ssh -l sftp eco.cs.hartford.edu "cat /media/data/sftp/flow_data/DBData/sitesDB.csv"'))
scp("eco.cs.hartford.edu:22","/media/data/sftp/flow_data/DBData/sites.csv","water97$",user="sftp")
install.packages("ssh")
library(ssh)
session<- ssh_connect("eco.cs.hartford.edu")
session<- ssh_connect("sftp@eco.cs.hartford.edu:@22")
session<- ssh_connect("sftp@eco.cs.hartford.edu:22")
scp_download(session,"/media/data/sftp/flow_data/DBData/sitesDB.csv",
to="P:/Projects/2018/FlowImpair/TrailCamFlowImageDataPrj/DBDevNotes/ExampleDataforDB")
ssh_tunnel(session,port=5555,target="127.0.0.1")
ssh_tunnel(session,port=22,target="127.0.0.1")
ssh_tunnel(session,port=3308,target="127.0.0.1")
ssh_tunnel(session,port=5555,target="127.0.0.1:3308")
ssh_tunnel(session,port=22,target="127.0.0.1:3308")
ssh_tunnel(session,port=3308,target="127.0.0.1:3308")
ssh_disconnect(session)
session<- ssh_connect("sftp@eco.cs.hartford.edu:22"
session<- ssh_connect("sftp@eco.cs.hartford.edu:22")
ssh_tunnel(session,port=22,target="127.0.0.1:3308")
ssh_exec_wait(command= r)
ssh_exec_wait(session,command= r)
ssh_exec_wait(session,command= "dir")
ssh_disconnect(session)
session<- ssh_connect("sftp@eco.cs.hartford.edu:22")
ssh_exec_wait(session,command= "mysql -u flow_user -p flow_observations")
ssh_exec_wait(session,command= "mysql -u flow_user -p flow_observation")
ssh_disconnect(session)
session<- ssh_connect("sftp@eco.cs.hartford.edu:22")
ssh_exec_wait(session,command= "mysql -u flow_user -p water97$ flow_observation")
ssh_exec_wait(session,command= "mysql -u flow_user -p flow_observation")
ssh_disconnect(session)
session<- ssh_connect("sftp@eco.cs.hartford.edu:22")
ssh_exec_wait(session,command= "mysql -u flow_user -p water97$ flow_observation")
ssh_exec_wait(session,command= c("mysql -u flow_user -p water97$ flow_observation",SELECT * FROM test))
ssh_exec_wait(session,command= c("mysql -u flow_user -p water97$ flow_observation","SELECT * FROM test"))
ssh_exec_wait(session,command= c("mysql -u flow_user -p water97$ flow_observation SELECT * FROM test"))
test<-ssh_exec_wait(session,command= c("mysql -u flow_user -p water97$ flow_observation SELECT * FROM test"))
test
ssh_disconnect(session)
dim(test)
session<- ssh_connect("sftp@eco.cs.hartford.edu:22")
setwd("P:/Projects/GitHub_Prj/DiatomMetricThreshold/data")
library(ggplot2)
library(e1071)
IND <-  read.csv ("DiatomMetrics_GAM.csv",sep=",",header=TRUE)
#IND<-IND[IND$ID!='S18882_2015',]
IND[is.na(IND)] <- 0
IND$TPGrp<-factor(ifelse(IND$TP_MGL<0.065,"low","high"))
IND$TPGrp3<-factor(ifelse(IND$TP_MGL<=0.02,"low",
ifelse(IND$TP_MGL>0.065,"high","medium")))
INDT <-  read.csv ("DiatomMetrics_2017.csv",sep=",",header=TRUE)
INDT[is.na(INDT)] <- 0
INDT$TPGrp<-factor(ifelse(INDT$TP_MGL<0.065,"low","high"))
INDT$R<-(INDT$H*10)/(INDT$H+INDT$L)
INDT$SH<-INDT$H*10
x<-as.matrix(IND[,c(5,6)])
y<-IND[,8]
m<-IND[,c(5,6,8)]
##Run Linear SVM Model
model<-svm(TPGrp~.,data=m,kernel="linear",cost=1,scale=FALSE,
class.weights=(c("high"=3,"low"=1)))
pred<-predict(model,m)
table(pred=pred,true=m$TPGrp)# confusion matrix
m2<-INDT[,c(5,6,7)]
pred2<- predict(model,m2)
table(pred=pred2,true=m2$TPGrp)# confusion matrix
beta<- drop(t(model$coefs)%*%x[model$index,])
beta0 <- model$rho
int<-(beta0 / beta[1]) #line intercept
sl<-(-beta[2] / beta[1]) # line slope
int1<-(beta0 - 1) / beta[1] #lower decision boundary
int2<-(beta0 + 1) / beta[1] #upper decision boundary
mindx<-as.data.frame(x[model$index,])#support points that determine the boundary
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75))+
geom_abline(intercept = int,slope=sl)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GRP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75))+
geom_abline(intercept = int,slope=sl)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel2))+
geom_abline(intercept = int,slope=sl)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(2)))+
geom_abline(intercept = int,slope=sl)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(2))
legend.text=element_text(size=rel(2)))+
geom_abline(intercept = int,slope=sl)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(2)),
legend.text=element_text(size=rel(2)))+
geom_abline(intercept = int,slope=sl)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(2)),
legend.text=element_text(size=rel(2)),
legend.title=element_text(size=rel(2)))+
geom_abline(intercept = int,slope=sl)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(2)),
legend.text=element_text(size=rel(1)),
legend.title=element_text(size=rel(1)))+
geom_abline(intercept = int,slope=sl)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(1)),
legend.text=element_text(size=rel(1)),
legend.title=element_text(size=rel(1)))+
geom_abline(intercept = int,slope=sl)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(1.5)),
legend.text=element_text(size=rel(1.5)),
legend.title=element_text(size=rel(1.5)))+
geom_abline(intercept = int,slope=sl)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(1.5)),
legend.text=element_text(size=rel(1.5)),
legend.title=element_text(size=rel(1.5)))+
geom_abline(intercept = int,slope=sl,size=5)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(1.5)),
legend.text=element_text(size=rel(1.5)),
legend.title=element_text(size=rel(1.5)))+
geom_abline(intercept = int,slope=sl,size=3)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(1.5)),
legend.text=element_text(size=rel(1.5)),
legend.title=element_text(size=rel(1.5)))+
geom_abline(intercept = int,slope=sl,size=2)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggsave("svm_diatom.tiff",device=tiff,dpi=220)
ggsave("svm_diatom.tiff",device=tiff,dpi=220,width=5,height=5)
ggsave("svm_diatom.tiff",device=tiff,dpi=220,width=5,height=5,units="in")
ggsave("svm_diatom.tiff",device=tiff,width=5,height=5,units="in")
ggsave("svm_diatom.tiff",device=tiff,width=400,height=400)
ggsave("svm_diatom.tiff",device=tiff,width=40,height=40)
ggsave("svm_diatom.tiff",device=tiff,width=100,height=100)
ggsave("svm_diatom.tiff",device=tiff,width=80,height=80)
ggsave("svm_diatom.tiff",device=tiff,width=5,height=5)
ggsave("svm_diatom.tiff",device=tiff,width=10,height=10)
ggsave("svm_diatom.tiff",device=tiff,width=20,height=20)
ggsave("svm_diatom.jpeg",device=jpeg,width=20,height=20)
ggsave("svm_diatom.jpeg",device=jpeg,width=20,height=20,units="in")
ggsave("svm_diatom.jpeg",device=jpeg,width=200,height=200)
ggsave("svm_diatom.jpeg",device=jpeg)
ggsave("svm_diatom.jpeg",device=jpeg,height=100,width=100)
ggsave("svm_diatom.jpeg",device=jpeg,height=10,width=10)
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(1.5)),
legend.text=element_text(size=rel(1.5)),
legend.title=element_text(size=rel(1.5)))+
geom_abline(intercept = int,slope=sl,size=2)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggsave("svm_diatom.jpeg",device=jpeg,height=10,width=10)
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(1.5)),
legend.text=element_text(size=rel(1.5)),
legend.title=element_text(size=rel(1.5)))+
geom_abline(intercept = int,slope=sl,size=2)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP GROUP")
ggsave("svm_diatom.jpeg",device=jpeg,height=10,width=10)
ggsave("svm_diatom.png",device=png,height=10,width=10)
ggsave("svm_diatom.png",device=png,height=480,width=480,units="px")
ggsave("svm_diatom.png",device=png,height=480,width=480)
ggsave("svm_diatom.png",device=png,height=20,width=20,units="cm")
ggsave("svm_diatom.tiff",height=5,width=5,units="in")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(1.5)),
legend.text=element_text(size=rel(1.5)),
legend.title=element_text(size=rel(1.5)))+
geom_abline(intercept = int,slope=sl,size=2)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP Concentration")
ggsave("svm_diatom.tiff",height=5,width=5,units="in")
table(pred=pred,true=m$TPGrp)# confusion matrix
table(pred=pred2,true=m2$TPGrp)# confusion matrix
IND$TPGrp3<-factor(ifelse(IND$TP_MGL<=0.04,"low",
ifelse(IND$TP_MGL>0.065,"high","medium")))
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(1.5)),
legend.text=element_text(size=rel(1.5)),
legend.title=element_text(size=rel(1.5)))+
geom_abline(intercept = int,slope=sl,size=2)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP Concentration")
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp3)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(1.5)),
legend.text=element_text(size=rel(1.5)),
legend.title=element_text(size=rel(1.5)))+
geom_abline(intercept = int,slope=sl,size=2)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP Concentration")
IND$TPGrp3<-factor(ifelse(IND$TP_MGL<=0.02,"low",
ifelse(IND$TP_MGL>0.065,"high","medium")))
ggplot()+
geom_point(data=IND,aes(H,L,colour=factor(TPGrp3)))+
#geom_point(data=mindx,aes(H,L),shape=21,size=5)+
#support points that determine the boundary
xlim(0,1)+
ylim(0,1)+
theme(legend.position=c(0.75,0.75),axis.title=element_text(size=rel(1.5)),
legend.text=element_text(size=rel(1.5)),
legend.title=element_text(size=rel(1.5)))+
geom_abline(intercept = int,slope=sl,size=2)+
#geom_abline(intercept=int1,slope=sl,linetype=2)+
#geom_abline(intercept=int2,slope=sl,linetype=2)+
labs(x="Rel Abund Tolerant Diatoms",
y="Rel Abund Senstitive Diatoms",
colour="TP Concentration")
pred
pred2
predsites<-as.data.frame(pred)
predsites
IND[1:10,]
predsites<-cbind(predsites,IND)
predsites
INDT
pred2
predsitesT<-as.data.frame(pred2)
predsitesT<-cbind(predsitesT,INDT)
dim(predsitesT)
dim(predsites)
names(predsites)
names(predsitesT)
write.csv(predsites,"predsites.csv")
predsitesT<-predsitesT[,c(1:4,6:8)]
predsitesT
names(predsites)
predsites[,c(1,2,4:7,9)]
predsites<- predsites[,c(1,2,4:7,9)]
predsites
names(predsites)
names(predsitesT)
predsites<-rbind(predsites,predsitesT)
colnames(predsitesT[1])
colnames(predsitesT[1])<-"pred"
names(predsitesT)
predsitesT
colnames(predsitesT)[1]<-"pred"
predsitesT
predsites<-rbind(predsites,predsitesT)
names(predsites)
names(predsitesT)
colnames(predsitesT)[3]<-"Station_Name"
predsitesT
predsites<-rbind(predsites,predsitesT)
predsites<-rbind(predsites,predsitesT,stringsAsFactors=FALSE)
write.csv(predsites,"predsites.csv")
write.csv(predsitesT,"predsitesT.csv")
predsitesT<-as.data.frame(pred2)
predsitesT<-cbind(predsitesT,INDT)
predsitesT<-predsitesT[,c(1:4,6:8)]
predsitesT
INDT
predsites<-as.data.frame(pred)
predsites<-cbind(predsites,IND)
predsites
predsites<-as.data.frame(pred)
predsites<-cbind(predsites,IND)
predsites<- predsites[,c(1,3:7,9)]
colnames(predsites)[3]<-"ID"
predsitesT<-as.data.frame(pred2)
predsitesT<-cbind(predsitesT,INDT)
predsitesT<-predsitesT[,c(1:4,6:8)]
colnames(predsitesT)[1]<-"pred"
colnames(predsitesT)[3]<-"Station_Name"
predsitesT<-as.data.frame(pred2)
predsitesT<-cbind(predsitesT,INDT)
predsitesT<-predsitesT[,c(1:4,6:8)]
colnames(predsitesT)[1]<-"pred"
colnames(predsitesT)[3]<-"Station_Name"
predsites<-rbind(predsites,predsitesT)
names(predsites)
names(predsitesT)
predsites<-as.data.frame(pred)
predsites<-cbind(predsites,IND)
predsites<- predsites[,c(1,3:7,9)]
colnames(predsites)[2]<-"ID"
predsitesT<-as.data.frame(pred2)
predsitesT<-cbind(predsitesT,INDT)
predsitesT<-predsitesT[,c(1:4,6:8)]
colnames(predsitesT)[1]<-"pred"
colnames(predsitesT)[3]<-"Station_Name"
predsites<-rbind(predsites,predsitesT)
write.csv(predsites,"predsites.csv")
predsites$ImpairT<-ifelse(predsites$pred=="high"&predsites$TPGrp=="high",1,0)
write.csv(predsites,"predsites.csv")
class(predsites$ID)
library(RODBC)
cn<- odbcDriverConnect("Driver=ODBC Driver 13 for SQL Server; Server= DEEPDBS120; Database=WQX;
Uid=wqx_readonly;Pwd=wqx_readonly")
sites<- sqlFetch(cn,"Stations")
odbcClose(cn)
names(sites)
sites<-sites[,c(1,11:12)]
colnames(sites)[1]<-"ID"
predsites<-merge(predsites,sites,by.x="ID")
predsites[1:10,]
write.csv(predsites,"predsites.csv")
